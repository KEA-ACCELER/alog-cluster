apiVersion: argoproj.io/v1alpha1
kind: EventBus
metadata:
  name: default
spec:
  nats:
    native:
      # Optional, defaults to 3. If it is < 3, set it to 3, that is the minimal requirement.
      replicas: 3
      # Optional, authen strategy, "none" or "token", defaults to "none"
      auth: token
      # containerTemplate:
      #   resources:
      #     requests:
      #       cpu: "10m"
      # metricsContainerTemplate:
      #   resources:
      #     requests:
      #       cpu: "10m"
      # antiAffinity: false
      # persistence:
      #   storageClassName: standard
      #   accessMode: ReadWriteOnce
      #   volumeSize: 10Gi
---
# Info on GitHub Webhook: https://developer.github.com/v3/repos/hooks/#create-a-hook
apiVersion: argoproj.io/v1alpha1
kind: EventSource
metadata:
  name: github
spec:
  service:
    ports:
      - name: ci
        port: 12000
        targetPort: 12000
      # - name: example-without-api-credentials
      #   port: 13000
      #   targetPort: 13000
  github:
    ci-webhook:
      repositories:
        - owner: KEA-ACCELER
          names:
            - alog-front-web
            - alog-service-user
            - alog-service-aggregator
            - alog-service-project
            - alog-service-issue
            - alog-service-release
            - alog-service-auth
            - alog-service-file
            - alog-service-notification
      # Github application auth. Instead of using personal token `apiToken` use app PEM            
      # githubApp:
      #   privateKey:
      #     name: github-app-pem
      #     key: privateKey.pem
      #   appID: <app id>
      #   installationID: <app installation id>
      # Github will send events to following port and endpoint
      webhook:
        # endpoint to listen to events on
        endpoint: /github-webhook-develop
        # port to run internal HTTP server on
        port: "12000"
        # HTTP request method to allow. In this case, only POST requests are accepted
        method: POST
        # url the event-source will use to register at Github.
        # This url must be reachable from outside the cluster.
        # The name for the service is in `<event-source-name>-eventsource-svc` format.
        # You will need to create an Ingress or Openshift Route for the event-source service so that it can be reached from GitHub.
        url: https://alog.acceler.kr
      # type of events to listen to.
      # following listens to everything, hence *
      # You can find more info on https://developer.github.com/v3/activity/events/types/
      events:
        - "push"

      # apiToken refers to K8s secret that stores the github api token
      # if apiToken is provided controller will create webhook on GitHub repo
      # +optional
      apiToken:
        # Name of the K8s secret that contains the access token
        name: alog-secret
        # Key within the K8s secret whose corresponding value (must be base64 encoded) is access token
        key: GITHUB_TOKEN

      # webhookSecret refers to K8s secret that stores the github hook secret
      # +optional
      webhookSecret:
        # Name of the K8s secret that contains the hook secret
        name: alog-secret
        # Key within the K8s secret whose corresponding value (must be base64 encoded) is hook secret
        key: WEBHOOK_SECRET

      # type of the connection between event-source and Github.
      # You should set it to false to avoid man-in-the-middle and other attacks.
      insecure: false
      # Determines if notifications are sent when the webhook is triggered
      active: true
      # The media type used to serialize the payloads
      contentType: json
      
    # example-without-api-credentials:
    #   owner: "argoproj"
    #   repository: "argo"
    #   webhook:
    #     endpoint: "/push"
    #     port: "13000"
    #     method: "POST"
    #   events:
    #     - "*"
    #   webhookSecret:
    #     name: github-access
    #     key: secret
    #   insecure: true
    #   active: true
    #   contentType: "json"

    # example-with-secure-connection:
    #   owner: "argoproj"
    #   repository: "argo"
    #   webhook:
    #     endpoint: "/push"
    #     port: "13000"
    #     method: "POST"
    #     url: "http://myargofakeurl.fake"
    #     # k8s secret that contains the cert
    #     serverCertSecret:
    #       name: my-secret
    #       key: cert-key
    #     # k8s secret that contains the private key
    #     serverKeySecret:
    #       name: my-secret
    #       key: pk-key
    #   events:
    #     - "push"
    #     - "delete"
    #   apiToken:
    #     name: github-access
    #     key: token
    #   webhookSecret:
    #     name: github-access
    #     key: secret
    #   insecure: true
    #   active: true
    #   contentType: "json"
---
apiVersion: v1
kind: Service
metadata:
  name: github-enventsource-svc
spec:
  ports:
    - port: 12000
      targetPort: 12000
  selector:
    eventsource-name: github
